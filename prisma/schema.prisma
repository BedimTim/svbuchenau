generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Post {
  id        String  @id @default(cuid())
  title     String
  content   String?
  published Boolean @default(false)
  authorId  String?
  author    User?   @relation(fields: [authorId], references: [id])
}

model User {
  id        String   @id @default(cuid())
  name      String?
  email     String?  @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  posts     Post[]

  @@map("users")
}

model ausr_stung {
  ausr_stungs_id                                                                Int                          @id @map("ausrüstungs_id")
  ausr_stungstyp                                                                Int?                         @map("ausrüstungstyp")
  ausr_stungshersteller                                                         Int?                         @map("ausrüstungshersteller")
  einzelpreis                                                                   Decimal?                     @db.Decimal(10, 2)
  ausr_stungshersteller_ausr_stung_ausr_stungsherstellerToausr_stungshersteller ausr_stungshersteller?       @relation("ausr_stung_ausr_stungsherstellerToausr_stungshersteller", fields: [ausr_stungshersteller], references: [hersteller_id], onDelete: NoAction, onUpdate: NoAction)
  ausr_stungstyp_ausr_stung_ausr_stungstypToausr_stungstyp                      ausr_stungstyp?              @relation("ausr_stung_ausr_stungstypToausr_stungstyp", fields: [ausr_stungstyp], references: [ausr_stungstyp_id], onDelete: NoAction, onUpdate: NoAction)
  ausr_stungskauf_ausr_stung_ausr_stungskauf_ausr_stung_ausr_stungToausr_stung  ausr_stungskauf_ausr_stung[] @relation("ausr_stungskauf_ausr_stung_ausr_stungToausr_stung")

  @@map("ausrüstung")
}

model ausr_stungshersteller {
  hersteller_id                                                      Int          @id
  herstellername                                                     String?      @db.VarChar(255)
  ausr_stung_ausr_stung_ausr_stungsherstellerToausr_stungshersteller ausr_stung[] @relation("ausr_stung_ausr_stungsherstellerToausr_stungshersteller")

  @@map("ausrüstungshersteller")
}

model ausr_stungskauf {
  kauf_id                                                                                Int                          @id
  datum                                                                                  DateTime?                    @db.Date
  zweck                                                                                  String?                      @db.VarChar(255)
  mitglied                                                                               Int?
  mitglied_ausr_stungskauf_mitgliedTomitglied                                            mitglied?                    @relation("ausr_stungskauf_mitgliedTomitglied", fields: [mitglied], references: [mitglied_id], onDelete: NoAction, onUpdate: NoAction)
  ausr_stungskauf_ausr_stung_ausr_stungskauf_ausr_stung_ausr_stungskaufToausr_stungskauf ausr_stungskauf_ausr_stung[] @relation("ausr_stungskauf_ausr_stung_ausr_stungskaufToausr_stungskauf")

  @@map("ausrüstungskauf")
}

model ausr_stungskauf_ausr_stung {
  ausr_stungskauf                                                             Int             @map("ausrüstungskauf")
  ausr_stung                                                                  Int             @map("ausrüstung")
  anzahl                                                                      Int?
  ausr_stung_ausr_stungskauf_ausr_stung_ausr_stungToausr_stung                ausr_stung      @relation("ausr_stungskauf_ausr_stung_ausr_stungToausr_stung", fields: [ausr_stung], references: [ausr_stungs_id], onDelete: NoAction, onUpdate: NoAction)
  ausr_stungskauf_ausr_stungskauf_ausr_stung_ausr_stungskaufToausr_stungskauf ausr_stungskauf @relation("ausr_stungskauf_ausr_stung_ausr_stungskaufToausr_stungskauf", fields: [ausr_stungskauf], references: [kauf_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([ausr_stungskauf, ausr_stung])
  @@map("ausrüstungskauf_ausrüstung")
}

model ausr_stungstyp {
  ausr_stungstyp_id                                    Int          @id @map("ausrüstungstyp_id")
  bezeichnung                                          String?      @db.VarChar(255)
  ausr_stung_ausr_stung_ausr_stungstypToausr_stungstyp ausr_stung[] @relation("ausr_stung_ausr_stungstypToausr_stungstyp")

  @@map("ausrüstungstyp")
}

model auszeichnung {
  auszeichnungs_id                                                 Int               @id
  verleihungsdatum                                                 DateTime?         @db.Date
  auszeichnungstyp                                                 Int?
  mitglied                                                         Int?
  auszeichnungstyp_auszeichnung_auszeichnungstypToauszeichnungstyp auszeichnungstyp? @relation("auszeichnung_auszeichnungstypToauszeichnungstyp", fields: [auszeichnungstyp], references: [auszeichnungstyp_id], onDelete: NoAction, onUpdate: NoAction)
  mitglied_auszeichnung_mitgliedTomitglied                         mitglied?         @relation("auszeichnung_mitgliedTomitglied", fields: [mitglied], references: [mitglied_id], onDelete: NoAction, onUpdate: NoAction)
}

model auszeichnungstyp {
  auszeichnungstyp_id                                          Int            @id
  bezeichnung                                                  String?        @db.VarChar(255)
  verleihungsgrund                                             String?        @db.VarChar(255)
  auszeichnung_auszeichnung_auszeichnungstypToauszeichnungstyp auszeichnung[] @relation("auszeichnung_auszeichnungstypToauszeichnungstyp")
}

model besucher {
  besucher_id                                    Int             @id
  vorname                                        String?         @db.VarChar(255)
  nachname                                       String?         @db.VarChar(255)
  bierdeckel                                     bierdeckel[]
  registrierung_registrierung_besucherTobesucher registrierung[] @relation("registrierung_besucherTobesucher")
}

model bierdeckel {
  bierdeckel_id                                                Int                  @id
  datum                                                        DateTime?            @db.Date
  uhrzeit                                                      DateTime?            @db.Time(6)
  bezahlt                                                      Boolean?
  besucher_id                                                  Int?
  mitglied_id                                                  Int?
  besucher                                                     besucher?            @relation(fields: [besucher_id], references: [besucher_id], onDelete: NoAction, onUpdate: NoAction)
  mitglied                                                     mitglied?            @relation(fields: [mitglied_id], references: [mitglied_id], onDelete: NoAction, onUpdate: NoAction)
  bierdeckel_getr_nk_bierdeckel_getr_nk_bierdeckelTobierdeckel bierdeckel_getr_nk[] @relation("bierdeckel_getr_nk_bierdeckelTobierdeckel")
}

model bierdeckel_getr_nk {
  bierdeckel                                           Int
  getr_nk                                              Int        @map("getränk")
  anzahl                                               Int?
  bierdeckel_bierdeckel_getr_nk_bierdeckelTobierdeckel bierdeckel @relation("bierdeckel_getr_nk_bierdeckelTobierdeckel", fields: [bierdeckel], references: [bierdeckel_id], onDelete: NoAction, onUpdate: NoAction)
  getr_nk_bierdeckel_getr_nk_getr_nkTogetr_nk          getr_nk    @relation("bierdeckel_getr_nk_getr_nkTogetr_nk", fields: [getr_nk], references: [getr_nk_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([bierdeckel, getr_nk])
  @@map("bierdeckel_getränk")
}

model disziplin {
  disziplin_id                                           Int                @id
  bezeichnung                                            String?            @db.VarChar(255)
  sch_tzenergebnis_sch_tzenergebnis_disziplinTodisziplin sch_tzenergebnis[] @relation("sch_tzenergebnis_disziplinTodisziplin")
}

model getr_nk {
  getr_nk_id                                             Int                  @id @map("getränk_id")
  bezeichnung                                            String?              @db.VarChar(255)
  preis                                                  Decimal?             @db.Decimal(10, 2)
  marke                                                  Int?
  sorte                                                  Int?
  bierdeckel_getr_nk_bierdeckel_getr_nk_getr_nkTogetr_nk bierdeckel_getr_nk[] @relation("bierdeckel_getr_nk_getr_nkTogetr_nk")
  getr_nkemarke                                          getr_nkemarke?       @relation(fields: [marke], references: [marke_id], onDelete: NoAction, onUpdate: NoAction)
  getr_nkesorte                                          getr_nkesorte?       @relation(fields: [sorte], references: [sorte_id], onDelete: NoAction, onUpdate: NoAction)

  @@map("getränk")
}

model getr_nkemarke {
  marke_id Int       @id
  name     String?   @db.VarChar(255)
  getr_nk  getr_nk[]

  @@map("getränkemarke")
}

model getr_nkesorte {
  sorte_id    Int       @id
  bezeichnung String?   @db.VarChar(255)
  getr_nk     getr_nk[]

  @@map("getränkesorte")
}

model mitglied {
  mitglied_id                                        Int               @id
  vorname                                            String?           @db.VarChar(255)
  nachname                                           String?           @db.VarChar(255)
  wohnort                                            String?           @db.VarChar(255)
  plz                                                String?           @db.VarChar(10)
  stra_e                                             String?           @map("straße") @db.VarChar(255)
  hausnr                                             String?           @db.VarChar(10)
  handynummer                                        String?           @db.VarChar(20)
  festnetznummer                                     String?           @db.VarChar(20)
  email_adresse                                      String?           @db.VarChar(255)
  geburtsdatum                                       DateTime?         @db.Date
  mitgliedsart                                       Int?
  ausr_stungskauf_ausr_stungskauf_mitgliedTomitglied ausr_stungskauf[] @relation("ausr_stungskauf_mitgliedTomitglied")
  auszeichnung_auszeichnung_mitgliedTomitglied       auszeichnung[]    @relation("auszeichnung_mitgliedTomitglied")
  bierdeckel                                         bierdeckel[]
  mitgliedsart_mitglied_mitgliedsartTomitgliedsart   mitgliedsart?     @relation("mitglied_mitgliedsartTomitgliedsart", fields: [mitgliedsart], references: [mitgliedsart_id], onDelete: NoAction, onUpdate: NoAction)
  teilnahme_teilnahme_mitgliedTomitglied             teilnahme[]       @relation("teilnahme_mitgliedTomitglied")
}

model mitgliedsart {
  mitgliedsart_id                              Int        @id
  bezeichnung                                  String?    @db.VarChar(255)
  preis                                        Decimal?   @db.Decimal(10, 2)
  mitglied_mitglied_mitgliedsartTomitgliedsart mitglied[] @relation("mitglied_mitgliedsartTomitgliedsart")
}

model registrierung {
  registrierungs_id                                                 Int               @id
  besucher                                                          Int?
  veranstaltung                                                     Int?
  sch_tzenergebnis                                                  Int?              @map("schützenergebnis")
  besucher_registrierung_besucherTobesucher                         besucher?         @relation("registrierung_besucherTobesucher", fields: [besucher], references: [besucher_id], onDelete: NoAction, onUpdate: NoAction)
  sch_tzenergebnis_registrierung_sch_tzenergebnisTosch_tzenergebnis sch_tzenergebnis? @relation("registrierung_sch_tzenergebnisTosch_tzenergebnis", fields: [sch_tzenergebnis], references: [ergebnis_id], onDelete: NoAction, onUpdate: NoAction)
  veranstaltung_registrierung_veranstaltungToveranstaltung          veranstaltung?    @relation("registrierung_veranstaltungToveranstaltung", fields: [veranstaltung], references: [veranstaltungs_id], onDelete: NoAction, onUpdate: NoAction)
}

model sch_tzenergebnis {
  ergebnis_id                                                    Int             @id
  serie1                                                         Int?
  serie2                                                         Int?
  serie3                                                         Int?
  serie4                                                         Int?
  disziplin                                                      Int?
  registrierung_registrierung_sch_tzenergebnisTosch_tzenergebnis registrierung[] @relation("registrierung_sch_tzenergebnisTosch_tzenergebnis")
  disziplin_sch_tzenergebnis_disziplinTodisziplin                disziplin?      @relation("sch_tzenergebnis_disziplinTodisziplin", fields: [disziplin], references: [disziplin_id], onDelete: NoAction, onUpdate: NoAction)
  teilnahme_teilnahme_sch_tzenergebnisTosch_tzenergebnis         teilnahme[]     @relation("teilnahme_sch_tzenergebnisTosch_tzenergebnis")

  @@map("schützenergebnis")
}

model teilnahme {
  teilnahme_id                                                  Int               @id
  mitglied                                                      Int?
  veranstaltung                                                 Int?
  sch_tzenergebnis                                              Int?              @map("schützenergebnis")
  mitglied_teilnahme_mitgliedTomitglied                         mitglied?         @relation("teilnahme_mitgliedTomitglied", fields: [mitglied], references: [mitglied_id], onDelete: NoAction, onUpdate: NoAction)
  sch_tzenergebnis_teilnahme_sch_tzenergebnisTosch_tzenergebnis sch_tzenergebnis? @relation("teilnahme_sch_tzenergebnisTosch_tzenergebnis", fields: [sch_tzenergebnis], references: [ergebnis_id], onDelete: NoAction, onUpdate: NoAction)
  veranstaltung_teilnahme_veranstaltungToveranstaltung          veranstaltung?    @relation("teilnahme_veranstaltungToveranstaltung", fields: [veranstaltung], references: [veranstaltungs_id], onDelete: NoAction, onUpdate: NoAction)
}

model veranstaltung {
  veranstaltungs_id                                                    Int                @id
  datum                                                                DateTime?          @db.Date
  veranstaltungsortid                                                    Int?
  veranstaltungstypid                                                    Int?
  registrierung_registrierung_veranstaltungToveranstaltung             registrierung[]    @relation("registrierung_veranstaltungToveranstaltung")
  teilnahme_teilnahme_veranstaltungToveranstaltung                     teilnahme[]        @relation("teilnahme_veranstaltungToveranstaltung")
  veranstaltungsort                                                    veranstaltungsort? @relation("Toveranstaltungsort", fields: [veranstaltungsortid], references: [ort_id], onDelete: NoAction, onUpdate: NoAction)
  veranstaltungstyp                                                    veranstaltungstyp? @relation("Toveranstaltungstyp", fields: [veranstaltungstypid], references: [veranstaltungstyp_id], onDelete: NoAction, onUpdate: NoAction)
}

model veranstaltungsort {
  ort_id                                                           Int             @id
  ortsname                                                         String?         @db.VarChar(255)
  veranstaltung_veranstaltung_veranstaltungsortToveranstaltungsort veranstaltung[] @relation("Toveranstaltungsort")
}

model veranstaltungstyp {
  veranstaltungstyp_id                                             Int             @id
  bezeichnung                                                      String?         @db.VarChar(255)
  veranstaltung                                                    veranstaltung[] @relation("Toveranstaltungstyp")
}
